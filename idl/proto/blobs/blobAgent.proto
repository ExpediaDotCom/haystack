/*
 *
 *  Copyright 2018 Expedia, Inc.
 *
 *     Licensed under the Apache License, Version 2.0 (the "License");
 *     you may not use this file except in compliance with the License.
 *     You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 *     Unless required by applicable law or agreed to in writing, software
 *     distributed under the License is distributed on an "AS IS" BASIS,
 *     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *     See the License for the specific language governing permissions and
 *     limitations under the License.
 *
 */
syntax = "proto3";
import "blob.proto";

option java_package = "com.expedia.haystack.agent.blobs.api";
option java_multiple_files = true;
option go_package = "blob";

message DispatchResult {
    ResultCode code          = 1;  // result code is 0 for sucessful dipatch only
    string error_message     = 2;  // error message if result code is non zero

    enum ResultCode {
        SUCCESS                     = 0;
        UNKNOWN_ERROR               = 1;
        RATE_LIMIT_ERROR            = 2;
        MAX_SIZE_EXCEEDED_ERROR     = 3;
    }
}

message BlobReadResponse {
    Blob blob                = 1;
    ResultCode code          = 2;
    string error_message     = 3;

    enum ResultCode {
        SUCCESS              = 0;
        UNKNOWN_ERROR        = 1;
    }
}

message FormattedBlobReadResponse {
    string data              = 1;
}

message BlobSearch {
    string key               = 1;
}

// service interface to push blobs to haystack agent
service BlobAgent {
    rpc dispatch (Blob) returns (DispatchResult); // dispatch blob to haystack agent
    rpc read (BlobSearch) returns (BlobReadResponse);
    rpc readBlobAsString(BlobSearch) returns (FormattedBlobReadResponse);
}
