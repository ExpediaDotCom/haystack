/*
 *
 *  Copyright 2018 Expedia, Group.
 *
 *     Licensed under the Apache License, Version 2.0 (the "License");
 *     you may not use this file except in compliance with the License.
 *     You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 *     Unless required by applicable law or agreed to in writing, software
 *     distributed under the License is distributed on an "AS IS" BASIS,
 *     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *     See the License for the specific language governing permissions and
 *     limitations under the License.
 *
 */
syntax = "proto3";

option java_package = "com.expedia.open.tracing.backend";
option java_multiple_files = true;
option go_package = "haystack";


message Field {
    string name = 1; // name of the field
    string value = 2; // value of the field
}
message Metadata {
    repeated Field fields = 1;
}

message TraceRecord {
    string traceId = 1;
    bytes spans = 2; // byte array value type
    int64 timestamp = 4;
    Metadata metadata = 3;
}

// query for writing trace records to persistent store
message WriteSpansRequest {
    repeated TraceRecord records = 1;
}

// query for reading trace records from persistent store
message ReadSpansRequest {
    repeated string traceIds = 1; // trace id of the request
}

message ReadSpansResponse {
    repeated TraceRecord records = 1; // collection of span buffers
}

message WriteSpansResponse {
    ResultCode code = 1; // result code is 0 for sucessful dipatch only
    string error_message = 2; // error message if result code is non zero

    enum ResultCode {
        SUCCESS = 0;
        UNKNOWN_ERROR = 1;
    }
}

// service interface to write and read traces
service StorageBackend {
    rpc writeSpans (WriteSpansRequest) returns (WriteSpansResponse); // write buffered spans to backend
    rpc readSpans (ReadSpansRequest) returns (ReadSpansResponse); // read buffered spans from backend
}
