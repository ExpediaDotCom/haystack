health.status.path = "isHealthy"

service {
    port = 8088
    ssl {
      enabled = false
      cert.path = ""
      private.key.path = ""
    }
}

backend {
  client {
    host = "localhost"
    port = 8090
  }
}

elasticsearch {
  endpoint = "http://elasticsearch:9200"
  conn.timeout.ms = 10000
  read.timeout.ms = 5000

  index {
    name.prefix = "haystack-traces"
    type = "spans"
  }
}

trace {
  validators {
    sequence = [
      "com.expedia.www.haystack.trace.reader.readers.validators.TraceIdValidator"
      "com.expedia.www.haystack.trace.reader.readers.validators.ParentIdValidator"
      "com.expedia.www.haystack.trace.reader.readers.validators.RootValidator"
    ]
  }

  transformers {
    pre {
      sequence = [
        "com.expedia.www.haystack.trace.reader.readers.transformers.DeDuplicateSpanTransformer"
      ]
    }
    post {
      sequence = [
        "com.expedia.www.haystack.trace.reader.readers.transformers.PartialSpanTransformer"
        "com.expedia.www.haystack.trace.reader.readers.transformers.ClockSkewTransformer"
        "com.expedia.www.haystack.trace.reader.readers.transformers.SortSpanTransformer"
      ]
    }
  }
}

reload {
  tables {
    index.fields.config = "whitelist-index-fields"
  }
  config {
    endpoint = "http://elasticsearch:9200"
    database.name = "reload-configs"
  }
  startup.load = true
  interval.ms = 5000 # -1 will imply 'no reload'
}

