health.status.path = "/app/isHealthy"

service {
    port = 8090
    ssl {
      enabled = false
      cert.path = ""
      private.key.path = ""
    }
    max.message.size = 52428800 # 50MB in bytes
}

cassandra {
  # multiple endpoints can be provided as comma separated list
  endpoints = "cassandra"

  # enable the auto.discovery mode, if true then we ignore the endpoints(above) and use auto discovery
  # mechanism to find cassandra nodes. For today we only support aws node discovery provider
  auto.discovery {
    enabled: false
    //    aws: {
    //      region: "us-west-2"
    //      tags: {
    //        Role: haystack-cassandra
    //        Environment: ewetest
    //      }
    //    }
  }

  connections {
    max.per.host = 50
    read.timeout.ms = 30000
    conn.timeout.ms = 10000
    keep.alive = true
  }

  retries {
    max = 10
    backoff {
      initial.ms = 100
      factor = 2
    }
  }

  consistency.level = "one"

  on.error.consistency.level = [
    "com.datastax.driver.core.exceptions.UnavailableException",
    "any"
  ]

  ttl.sec = 259200

  keyspace: {
    # auto creates the keyspace and table name in cassandra(if absent)
    # if schema field is empty or not present, then no operation is performed
    auto.create.schema = "CREATE KEYSPACE IF NOT EXISTS haystack WITH REPLICATION = { 'class': 'SimpleStrategy', 'replication_factor' : 1 } AND durable_writes = false; CREATE TABLE IF NOT EXISTS haystack.traces (id varchar, ts timestamp, spans blob, PRIMARY KEY ((id), ts)) WITH CLUSTERING ORDER BY (ts ASC) AND compaction = { 'class' :  'DateTieredCompactionStrategy', 'max_sstable_age_days': '3' } AND gc_grace_seconds = 86400;"

    name: "haystack"
    table.name: "traces"
  }
}
