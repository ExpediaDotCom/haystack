---
apiVersion: "apps/v1beta1"
kind: Deployment
metadata:
  name: {{ (datasource "config").name }}
  namespace: {{ (datasource "config").namespace }}
spec:
  replicas: {{ (datasource "config").replicas }}
  selector:
    matchLabels:
       app: {{ (datasource "config").name }}
  template:
    metadata:
      labels:
        app: {{ (datasource "config").name }}
    spec:
      {{- if has (datasource "config") "terminationGracePeriodSeconds" }}
      terminationGracePeriodSeconds: {{(datasource "config").terminationGracePeriodSeconds}}
      {{- end }}
      {{- if has (datasource "config") "initCommand" }}
      initContainers:
         - name: init-{{(datasource "config").name }}
           image: busybox
           command: ['sh', '-c', {{ (datasource "config").initCommand }}]
      {{- end }}
      containers:
         - name: {{ (datasource "config").name }}
           image: {{ (datasource "config").image }}
           imagePullPolicy: IfNotPresent
{{- if has (datasource "config") "livenessProbe" }}
           livenessProbe:
{{ (datasource "config").livenessProbe | toYAML | strings.Indent 13 }}
{{- end }}
{{- if has (datasource "config") "volumes" }}
           volumeMounts:
{{- if has (datasource "config").volumes "appConfig" }}
              - name: config-volume
                mountPath: "{{ (datasource "config").volumes.appConfig.mountPath }}"
{{- end }}
{{- if has (datasource "config").volumes "ssl" }}
              - name: ssl
                mountPath: {{ (datasource "config").volumes.ssl.mountPath }}
{{- end }}
{{- end }}
{{- if has (datasource "config") "env" }}
           env:
{{ (datasource "config").env | toYAML | strings.Indent 13 }}
{{- end }}
{{- if has (datasource "config") "resources" }}
           resources:
{{ (datasource "config").resources | toYAML | strings.Indent 13 }}
{{- end }}
{{- if has (datasource "config") "ports" }}
           ports:
           - name: "tcp-{{(datasource "config").ports.containerPort}}"
             protocol: TCP
             containerPort: {{ (datasource "config").ports.containerPort }}
{{- if has (datasource "config").ports "hostPort" }}
             hostPort: {{ (datasource "config").ports.hostPort }}
{{- end }}
{{- end }}
{{- if has (datasource "config") "nodeSelector" }}
      nodeSelector:
{{ (datasource "config").nodeSelector | toYAML | strings.Indent 8 }}
{{- end }}
{{- if has (datasource "config") "volumes" }}
      volumes:
{{- if has (datasource "config") "appConfigMapName" }}
      - name: config-volume
        configMap:
          name: {{ (datasource "config").appConfigMapName }}
{{- end }}
{{- if has (datasource "config").volumes "ssl" }}
      - name: ssl
        secret:
         secretName: {{ (datasource "config").volumes.ssl.certsSecretName }}
{{- end }}
{{- end }}
---

{{- if has (datasource "config") "ports" }}
apiVersion: v1
kind: Service
metadata:
  name: {{ (datasource "config").name }}
  namespace: {{ (datasource "config").namespace }}
  labels:
    name: {{ (datasource "config").name }}
spec:
  selector:
   app: {{ (datasource "config").name }}
{{- if has (datasource "config").ports "nodePort" }}
  type: NodePort
{{- end }}
  ports:
  - name: "tcp-{{(datasource "config").ports.containerPort}}"
    protocol: TCP
    port: {{ (datasource "config").ports.servicePort }}
    targetPort: {{ (datasource "config").ports.containerPort }}
{{- if has (datasource "config").ports "nodePort" }}
    nodePort: {{ (datasource "config").ports.nodePort }}
{{- end }}
{{- end }}
---

{{- if has (datasource "config") "autoscale" }}
apiVersion: "autoscaling/v1"
kind: HorizontalPodAutoscaler
metadata:
  name: {{ (datasource "config").name }}
  namespace: {{ (datasource "config").namespace }}
spec:
  scaleTargetRef:
    apiVersion: "apps/v1beta1"
    kind: Deployment
    name: {{ (datasource "config").name }}
  minReplicas: {{ (datasource "config").replicas }}
  maxReplicas: {{ (datasource "config").autoscale.maxReplicas }}
  targetCPUUtilizationPercentage: {{ (datasource "config").autoscale.targetCPUUtilizationPercentage }}
{{- end }}
