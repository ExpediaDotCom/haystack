health.status.path = "/app/isHealthy"

kafka {
  close.timeout.ms = 30000

  streams {
    application.id = "haystack-service-graph-node-finder"
    bootstrap.servers = "kafkasvc:9092"
    num.stream.threads = 4
    request.timeout.ms = 60000
    commit.interval.ms = 3000
    auto.offset.reset = latest
    timestamp.extractor = "com.expedia.www.haystack.commons.kstreams.SpanTimestampExtractor"
    producer.linger.ms = 500
    state.dir = "/app"
    replication.factor = 2
  }

  producer {
    metrics.topic = "metric-data-points"
    service.call.topic = "graph-nodes"
  }

  consumer {
    topic = "proto-spans"
  }

  //config for span accumulator to wait for matching span after which it will drop the span
  accumulator {
    interval = 2500 //in milliSec
  }

  collectorTags = []

  node.metadata {
    topic {
      autocreate = true
      name = "haystack-node-finder-metadata"
      partition.count = 1
      replication.factor = 1
    }
  }
}
